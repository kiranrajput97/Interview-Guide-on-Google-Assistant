{
  "id": "7830acf0-4082-45d5-84ab-352aab871756",
  "name": "C interview questions",
  "auto": true,
  "contexts": [],
  "responses": [
    {
      "resetContexts": false,
      "affectedContexts": [],
      "parameters": [
        {
          "id": "6f777fe0-719f-4371-be0d-9296eda8d48a",
          "required": false,
          "dataType": "@sys.given-name",
          "name": "given-name",
          "value": "$given-name",
          "isList": false
        }
      ],
      "messages": [
        {
          "type": "simple_response",
          "platform": "google",
          "items": [
            {
              "textToSpeech": "Q.What is scope of a variable?\n How are variables scoped in C?\nAns: Scope of a variable is the part of the program where the variable may directly be accessible. In C, all identifiers are lexically (or statically) scoped."
            },
            {
              "textToSpeech": "Q:What is NULL pointer?\nA: NULL is used to indicate that the pointer doesn’t point to a valid location. Ideally, we should initialize pointers as NULL if we don’t know their value at the time of declaration. Also, we should make a pointer NULL when memory pointed by it is deallocated in the middle of a program."
            },
            {
              "textToSpeech": "Q.What is Dangling pointer?\nA: Dangling Pointer is a pointer that doesn’t point to a valid memory location. Dangling pointers arise when an object is deleted or deallocated, without modifying the value of the pointer, so that the pointer still points to the memory location of the deallocated memory."
            },
            {
              "textToSpeech": "Q.What is memory leak?  Why it should be avoided?\nA: Memory leak occurs when programmers create a memory in heap and forget to delete it. Memory leaks are particularly serious issues for programs like daemons and servers which by definition never terminate."
            },
            {
              "textToSpeech": "Q.What are local static variables?\n What is their use? A:A local static variable is a variable whose lifetime doesn’t end with a function call where it is declared. It extends for the lifetime of complete program. All calls to the function share the same copy of local static variables. Static variables can be used to count the number of times a function is called. Also, static variables get the default value as 0."
            },
            {
              "textToSpeech": "Q.What are static functions?\n What is their use?Ans:In C, functions are global by default. The “static” keyword before a function name makes it static. Unlike global functions in C, access to static functions is restricted to the file where they are declared. Therefore, when we want to restrict access to functions, we make them static. Another reason for making functions static can be reuse of the same function name in other files."
            },
            {
              "textToSpeech": "Q.What is a stack?\n A stack is one form of a data structure. Data is stored in stacks using the FILO (First In Last Out) approach. At any particular instance, only the top of the stack is accessible, which means that in order to retrieve data that is stored inside the stack, those on the upper part should be extracted first. Storing data in a stack is also referred to as a PUSH, while data retrieval is referred to as a POP."
            },
            {
              "textToSpeech": "Q.What is a sequential access file?\n When writing programs that will store and retrieve data in a file, it is possible to designate that file into different forms. A sequential access file is such that data are saved in sequential order: one data is placed into the file after another. To access a particular data within the sequential access file, data has to be read one data at a time, until the right one is reached."
            },
            {
              "textToSpeech": "Q.What is a sequential access file?\nWhen writing programs that will store and retrieve data in a file, it is possible to designate that file into different forms.\n A sequential access file is such that data are saved in sequential order: one data is placed into the file after another. To access a particular data within the sequential access file, data has to be read one data at a time, until the right one is reached."
            },
            {
              "textToSpeech": "Q.What is variable initialization and why is it important?\n This refers to the process wherein a variable is assigned an initial value before it is used in the program.n Without initialization, a variable would have an unknown value, which can lead to unpredictable outputs when used in computations or other operations."
            },
            {
              "textToSpeech": "Q.Differentiate Source Codes from Object Codes?\nSource codes are codes that were written by the programmer. It is made up of the commands and other English-like keywords that are supposed to instruct the computer what to do. However, computers would not be able to understand source codes. Therefore, source codes are compiled using a compiler. The resulting outputs are object codes, which are in a format that can be understood by the computer processor. In C programming, source codes are saved with the file extension .C, while object codes are saved with the file extension."
            },
            {
              "textToSpeech": "Q.In C programming, how do you insert quote characters (‘ and “) into the output screen?\nThis is a common problem for beginners because quotes are normally part of a printf statement. To insert the quote character as part of the output, use the format specifiers  (for single quote), and  (for double quote)."
            },
            {
              "textToSpeech": "Q.What is the use of a  character?It is referred to as a terminating null character, and is used primarily to show the end of a string value."
            },
            {
              "textToSpeech": "Q.What is the difference between the = symbol and == symbol?\nThe = symbol is often used in mathematical operations. It is used to assign a value to a given variable. On the other hand, the == symbol, also known as “equal to” or “equivalent to”, is a relational operator that is used to compare two values."
            },
            {
              "textToSpeech": "Q.What is the modulus operator?\nThe modulus operator outputs the remainder of a division. It makes use of the percentage (%) symbol. For example: 10 % 3 = 1, meaning when you divide 10 by 3, the remainder is 1."
            },
            {
              "textToSpeech": "Q.What is a nested loop?A nested loop is a loop that runs within another loop. Put it in another sense, you have an inner loop that is inside an outer loop. In this scenario, the inner loop is performed a number of times as specified by the outer loop. For each turn on the outer loop, the inner loop is first performed."
            },
            {
              "textToSpeech": "Q.What is a nested loop?\nA nested loop is a loop that runs within another loop. Put it in another sense, you have an inner loop that is inside an outer loop. In this scenario, the inner loop is performed a number of times as specified by the outer loop. For each turn on the outer loop, the inner loop is first performed."
            },
            {
              "textToSpeech": "Q.Compare and contrast compilers from interpreters.Compilers and interpreters often deal with how program codes are executed. Interpreters execute program codes one line at a time, while compilers take the program as a whole and convert it into object code, before executing it. The key difference here is that in the case of interpreters, a program may encounter syntax errors in the middle of execution, and will stop from there. On the other hand, compilers check the syntax of the entire program and will only proceed to execution when no syntax errors are found."
            },
            {
              "textToSpeech": "Q.How do you declare a variable that will hold string values?The char keyword can only hold 1 character value at a time. By creating an array of characters, you can store string values in it. Example: “char MyName[50]; ” declares a string variable named MyName that can hold a maximum of 50 characters."
            },
            {
              "textToSpeech": "Q.Can the curly brackets { } be used to enclose a single line of code?While curly brackets are mainly used to group several lines of codes, it will still work without error if you used it for a single line. Some programmers prefer this method as a way of organizing codes to make it look clearer, especially in conditional statements."
            },
            {
              "textToSpeech": "Q.What are header files and what are its uses in C programming?Header files are also known as library files. They contain two essential things: the definitions and prototypes of functions being used in a program."
            },
            {
              "textToSpeech": "Q.What is syntax error?Syntax errors are associated with mistakes in the use of a programming language. It maybe a command that was misspelled or a command that must was entered in lowercase mode but was instead entered with an upper case character. A misplaced symbol, or lack of symbol, somewhere within a line of code can also lead to syntax error."
            },
            {
              "textToSpeech": "Q.What are variables and it what way is it different from constants?\\nVariables and constants may at first look similar in a sense that both are identifiers made up of one character or more characters (letters, numbers and a few allowable symbols)."
            },
            {
              "textToSpeech": "Q.How do you access the values within an array?\\nArrays contain a number of elements, depending on the size you gave it during variable declaration. Each element is assigned a number from 0 to number of elements-1."
            },
            {
              "textToSpeech": "Q.Can I use  “int” data type to store the value 32768? Why?No. “int” data type is capable of storing values from -32768 to 32767. To store 32768, you can use “long int” instead. You can also use “unsigned int”, assuming you don’t intend to store negative values."
            },
            {
              "textToSpeech": "Q.Can two or more operators such as \n and \t be combined in a single line of program code?Yes, it’s perfectly valid to combine operators, especially if the need arises. For example: you can have a code like ” printf (“Hello\n\n World”) ” to output the text “Hello” on the first line and “World” enclosed in single quotes to appear on the next two lines."
            },
            {
              "textToSpeech": "Q.Why is it that not all header files are declared inQ. every C programA.The choice of declaring a header file at the top of each C program would depend on what commands/functions you will be using in that program. Since each header file contains different function definitions and prototype, you would be using only those header files that would contain the functions you will need. Declaring all header files in every program would only increase the overall file size and load of the program, and is not considered a good programming style."
            },
            {
              "textToSpeech": "Q.When is the “void” keyword used in a function?When declaring functions, you will decide whether that function would be returning a value or not. If that function will not return a value, such as when the purpose of a function is to display some outputs on the screen, then “void” is to be placed at the leftmost part of the function header. When a return value is expected after the function execution, the data type of the return value is placed instead of “void”."
            },
            {
              "textToSpeech": "Q.What are compound statements?Compound statements are made up of two or more program statements that are executed together. This usually occurs while handling conditions wherein a series of statements are executed when a TRUE or FALSE is evaluated. Compound statements can also be executed within a loop. Curly brackets { } are placed before and after compound statements."
            },
            {
              "textToSpeech": "Q.What is the significance of an algorithm to C programming?Before a program can be written, an algorithm has to be created first. An algorithm provides a step by step procedure on how a solution can be derived. It also acts as a blueprint on how a program will start and end, including what process and computations are involved."
            },
            {
              "textToSpeech": "Q.What is the advantage of an array over individual variables?When storing multiple related data, it is a good idea to use arrays. This is because arrays are named using only 1 word followed by an element number. For example: to store the 10 test results of 1 student, one can use 10 different variable names (grade1, grade2, grade3… grade10). With arrays, only 1 name is used, the rest are accessible through the index name (grade[0], grade[1], grade[2]… grade[9])"
            },
            {
              "textToSpeech": "Q.What is wrong in this statement?  scanf(“%d”,whatnumber);An ampersand & symbol must be placed before the variable name whatnumber. Placing & means whatever integer value is entered by the user is stored at the “address” of the variable name. This is a common mistake for programmers, often leading to logical errors."
            },
            {
              "textToSpeech": "Q.How do you generate random numbers in C?Random numbers are generated in C using the rand() command. For example: anyNum = rand() will generate any integer number beginning from 0, assuming that anyNum is a variable of type integer."
            },
            {
              "textToSpeech": "Q.What could possibly be the problem if a valid function name such as tolower() is being reported by the C compiler as undefined?The most probable reason behind this error is that the header file for that function was not indicated at the top of the program. Header files contain the definition and prototype for functions and commands used in a C program. In the case of “tolower()”, the code “#include <ctype.h>” must be present at the beginning of the program."
            },
            {
              "textToSpeech": "Q.What are comments and how do you insert it in a C program?Comments are a great way to put some remarks or description in a program. It can serves as a reminder on what the program is all about, or a description on why a certain code or function was placed there in the first place. Comments begin with /* and ended by */ characters. Comments can be a single line, or can even span several lines. It can be placed anywhere in the program."
            },
            {
              "textToSpeech": "Q.What is debugging?Debugging is the process of identifying errors within a program. During program compilation, errors that are found will stop the program from executing completely."
            },
            {
              "textToSpeech": "Q.What does the && operator do in a program code?The && is also referred to as AND operator. When using this operator, all conditions specified must be TRUE before the next action can be performed. If you have 10 conditions and all but 1 fails to evaluate as TRUE, the entire condition statement is already evaluated as FALSE."
            },
            {
              "textToSpeech": "Q. What does the format %10.2 mean when included in a printf statement?This format is used for two things: to set the number of spaces allotted for the output number and to set the number of decimal places."
            },
            {
              "textToSpeech": "Q.What are logical errors and how does it differ from syntax errors?Program that contains logical errors tend to pass the compilation process, but the resulting output may not be the expected one."
            },
            {
              "textToSpeech": "Q.What is || operator and how does it function in a program?The || is also known as the OR operator in C programming. When using || to evaluate logical conditions, any condition that evaluates to TRUE will render the entire condition statement as TRUE."
            },
            {
              "textToSpeech": "Q.Can the “if” function be used in comparing strings?No. “if” command can only be used to compare numerical values and single character values. For comparing string values, there is another function called strcmp that deals specifically with strings."
            },
            {
              "textToSpeech": "Q.What is wrong with this statement? myName = “Robin”;You cannot use the = sign to assign values to a string variable. Instead, use the strcpy function. The correct statement would be: strcpy(myName, “Robin”);"
            },
            {
              "textToSpeech": "Q.How do you determine the length of a string value that was stored in a variable?To get the length of a string value, use the function strlen()."
            },
            {
              "textToSpeech": "Q.Is it possible to initialize a variable at the time it was declared?Yes, you don’t have to write a separate assignment statement after the variable declaration, unless you plan to change it later on."
            },
            {
              "textToSpeech": "Q.Why is C language being considered a middle level language?This is because C language is rich in features that make it behave like a high level language while at the same time can interact with hardware using low level methods."
            },
            {
              "textToSpeech": "Q.What are the different file extensions involved when programming in C?Source codes in C are saved with .C file extension. Header files or library files have the .H file extension. Every time a program source code is successfully compiled, it creates an .OBJ object file, and an executable .EXE file."
            },
            {
              "textToSpeech": "Q.What are reserved words?Reserved words are words that are part of the standard C language library. This means that reserved words have special meaning and therefore cannot be used for purposes other than what it is originally intended for. Examples of reserved words are int, void, and return."
            },
            {
              "textToSpeech": "Q.What are linked list?A linked list is composed of nodes that are connected with another. In C programming, linked lists are created using pointers. Using linked lists is one efficient way of utilizing memory for storage."
            },
            {
              "textToSpeech": "Q.What is FIFO?In C programming, there is a data structure known as queue. In this structure, data is stored and accessed using FIFO format, or First-In-First-Out. A queue represents a line wherein the first data that was stored will be the first one that is accessible as well."
            },
            {
              "textToSpeech": "Q.What are binary trees?Binary trees are actually an extension of the concept of linked lists. A binary tree has two pointers, a left one and a right one. Each side can further branch to form additional nodes, which each node having two pointers as well."
            },
            {
              "textToSpeech": "Q.Not all reserved words are written in lowercase. TRUE or FALSE?FALSE. All reserved words must be written in lowercase; otherwise the C compiler would interpret this as unidentified and invalid."
            },
            {
              "textToSpeech": "Q.What is the difference between the expression “++a”  and “a++”?In the first expression, the increment would happen first on variable a, and the resulting value will be the one to be used. This is also known as a prefix increment. In the second expression, the current value of variable a would the one to be used in an operation, before the value of a itself is incremented. This is also known as postfix increment."
            },
            {
              "textToSpeech": "Q.What would happen to X in this expression: X += 15;  (assuming the value of X is 5)X +=15 is a short method of writing X = X + 15, so if the initial value of X is 5, then 5 + 15 = 20."
            },
            {
              "textToSpeech": "Q.In C language, the variables NAME, name, and Name are all the same. TRUE or FALSE?FALSE. C language is a case sensitive language. Therefore, NAME, name and Name are three uniquely different variables."
            },
            {
              "textToSpeech": "Q.What is a program flowchart and how does it help in writing a program?A flowchart provides a visual representation of the step by step procedure towards solving a given problem."
            },
            {
              "textToSpeech": "Q.What is wrong with this program statement? void = 10;The word void is a reserved word in C language. You cannot use reserved words as a user-defined variable."
            },
            {
              "textToSpeech": "Q.Is this program statement valid? INT = 10.50;Assuming that INT is a variable of type float, this statement is valid. One may think that INT is a reserved word and must not be used for other purposes."
            },
            {
              "textToSpeech": "Q. What are actual arguments?When you create and use functions that need to perform an action on some given values, you need to pass these given values to that function. The values that are being passed into the called function are referred to as actual arguments."
            },
            {
              "textToSpeech": "Q.What is a newline escape sequence? \\n A newline escape sequence is represented by the character. This is used to insert a new line when displaying data in the output screen. More spaces can be added by inserting more \n characters. For example, \n\n would insert two spaces. A newline escape sequence can be placed before the actual output expression or after."
            },
            {
              "textToSpeech": "Q.What is output redirection?It is the process of transferring data to an alternative output source other than the display screen. Output redirection allows a program to have its output saved to a file."
            },
            {
              "textToSpeech": "Q.What are run-time errors?These are errors that occur while the program is being executed. One common instance wherein run-time errors can happen is when you are trying to divide a number by zero."
            },
            {
              "textToSpeech": "Q.What is the difference between functions abs() and fabs()?These 2 functions basically perform the same action, which is to get the absolute value of the given value. Abs() is used for integer values, while fabs() is used for floating type numbers. Also, the prototype for abs() is under <stdlib.h>, while fabs() is under <math.h>."
            },
            {
              "textToSpeech": "Q.What are formal parameters?In using functions in a C program, formal parameters contain the values that were passed by the calling function. The values are substituted in these formal parameters and used in whatever operations as indicated within the main body of the called function."
            },
            {
              "textToSpeech": "Q.What are control structures?Control structures take charge at which instructions are to be performed in a program. This means that program flow may not necessarily move from one statement to the next one, but rather some alternative portions may need to be pass into or bypassed from, depending on the outcome of the conditional statements."
            },
            {
              "textToSpeech": "Q.When is a “switch” statement preferable over an “if” statement?The switch statement is best used when dealing with selections based on a single variable or expression. However, switch statements can only evaluate integer and character data types."
            },
            {
              "textToSpeech": "Q.What are global variables and how do you declare them?Global variables are variables that can be accessed and manipulated anywhere in the program. To make a variable global, place the variable declaration on the upper portion of the program, just after the preprocessor directives section."
            },
            {
              "textToSpeech": "Q.What are enumerated types?Enumerated types allow the programmer to use more meaningful words as values to a variable. Each item in the enumerated type variable is actually associated with a numeric code. For example, one can create an enumerated type variable named DAYS whose values are Monday, Tuesday… Sunday."
            },
            {
              "textToSpeech": "Q.What does the function toupper() do?It is used to convert any letter to its upper case mode. Toupper() function prototype is declared in <ctype.h>. Note that this function will only convert a single character, and not an entire string."
            },
            {
              "textToSpeech": "Q.Is it possible to have a function as a parameter in another function?Yes, that is allowed in C programming. You just need to include the entire function prototype into the parameter field of the other function where it is to be used."
            },
            {
              "textToSpeech": "Q.What are multidimensional arrays?Multidimensional arrays are capable of storing data in a two or more dimensional structure. For example, you can use a 2 dimensional array to store the current position of pieces in a chess game, or position of players in a tic-tac-toe program."
            },
            {
              "textToSpeech": "Q.What are pointers?Pointers point to specific areas in the memory. Pointers contain the address of a variable, which in turn may contain a value or even an address to another memory."
            },
            {
              "textToSpeech": "Q.Can you pass an entire structure to functions?Yes, it is possible to pass an entire structure to a function in a call by method style. However, some programmers prefer declaring the structure globally, then pass a variable of that structure type to a function. This method helps maintain consistency and uniformity in terms of argument type."
            },
            {
              "textToSpeech": "Q.What is gets() function?The gets() function allows a full line data entry from the user. When the user presses the enter key to end the input, the entire line of characters is stored to a string variable. Note that the enter key is not included in the variable, but instead a null terminator is placed after the last character."
            },
            {
              "textToSpeech": "Q.The % symbol has a special use in a printf statement. How would you place this character as part of the output on the screen?You can do this by using %% in the printf statement. For example, you can write printf(“10%%”) to have the output appear as 10% on the screen."
            },
            {
              "textToSpeech": "Q.How do you search data in a data file using random access method?Use the fseek() function to perform random access input/ouput on a file. After the file was opened by the fopen() function, the fseek would require three parameters to work: a file pointer to the file, the number of bytes to search, and the point of origin in the file."
            },
            {
              "textToSpeech": "Q.Are comments included during the compilation stage and placed in the EXE file as well?No, comments that were encountered by the compiler are disregarded. Comments are mostly for the guidance of the programmer only and do not have any other significant use in the program functionality."
            },
            {
              "textToSpeech": "Q.Is there a built-in function in C that can be used for sorting data?Yes, use the qsort() function. It is also possible to create user defined functions for sorting, such as those based on the balloon sort and bubble sort algorithm."
            },
            {
              "textToSpeech": "Q.What are the advantages and disadvantages of a heap?Storing data on the heap is slower than it would take when using the stack. However, the main advantage of using the heap is its flexibility. That’s because memory in this structure can be allocated and remove in any particular order. Slowness in the heap can be compensated if an algorithm was well designed and implemented."
            },
            {
              "textToSpeech": "Q.How do you convert strings to numbers in C?You can write you own functions to do string to number conversions, or instead use C’s built in functions. You can use atof to convert to a floating point value, atoi to convert to an integer value, and atol to convert to a long integer value."
            },
            {
              "textToSpeech": "Q.When is a “switch” statement preferable over an “if” statement?The switch statement is best used when dealing with selections based on a single variable or expression. However, switch statements can only evaluate integer and character data types."
            },
            {
              "textToSpeech": "Q.What are global variables and how do you declare them?Global variables are variables that can be accessed and manipulated anywhere in the program. To make a variable global, place the variable declaration on the upper portion of the program, just after the preprocessor directives section."
            },
            {
              "textToSpeech": "Q.What are enumerated types?Enumerated types allow the programmer to use more meaningful words as values to a variable. Each item in the enumerated type variable is actually associated with a numeric code. For example, one can create an enumerated type variable named DAYS whose values are Monday, Tuesday… Sunday."
            },
            {
              "textToSpeech": "Q.What does the function toupper() do?It is used to convert any letter to its upper case mode. Toupper() function prototype is declared in <ctype.h>. Note that this function will only convert a single character, and not an entire string."
            },
            {
              "textToSpeech": "Q.Is it possible to have a function as a parameter in another function?Yes, that is allowed in C programming. You just need to include the entire function prototype into the parameter field of the other function where it is to be used."
            },
            {
              "textToSpeech": "Q.What are multidimensional arrays?Multidimensional arrays are capable of storing data in a two or more dimensional structure. For example, you can use a 2 dimensional array to store the current position of pieces in a chess game, or position of players in a tic-tac-toe program."
            },
            {
              "textToSpeech": "Q.Which function in C can be used to append a string to another string?The strcat function. It takes two parameters, the source string and the string value to be appended to the source string."
            },
            {
              "textToSpeech": "Q.What is the difference between functions getch() and getche()?Both functions will accept a character input value from the user. When using getch(), the key that was pressed will not appear on the screen, and is automatically captured and assigned to a variable. When using getche(), the key that was pressed by the user will appear on the screen, while at the same time being assigned to a variable."
            },
            {
              "textToSpeech": "Q.Dothese two program statements perform the same output? 1) scanf(“%c”, &letter);  2) letter=getchar()Yes, they both do the exact same thing, which is to accept the next key pressed by the user and assign it to variable named letter."
            },
            {
              "textToSpeech": "Q.What are structure types in C?Structure types are primarily used to store records. A record is made up of related fields. This makes it easier to organize a group of related data."
            },
            {
              "textToSpeech": "Q.What does the characters “r” and “w” mean when writing programs that will make use of files?“r” means “read” and will open a file as input wherein data is to be retrieved. “w” means “write”, and will open a file for output. Previous data that was stored on that file will be erased."
            },
            {
              "textToSpeech": "Q.What is the difference between text files and binary files?Text files contain data that can easily be understood by humans. It includes letters, numbers and other characters. On the other hand, binary files contain 1s and 0s that only computers can interpret."
            },
            {
              "textToSpeech": "Q.is it possible to create your own header files?Yes, it is possible to create a customized header file. Just include in it the function prototypes that you want to use in your program, and use the #include directive followed by the name of your header file."
            },
            {
              "textToSpeech": "Q.What is dynamic data structure?Dynamic data structure provides a means for storing data more efficiently into memory. Using dynamic memory allocation, your program will access memory spaces as needed. This is in contrast to static data structure, wherein the programmer has to indicate a fix number of memory space to be used in the program."
            },
            {
              "textToSpeech": "Q.What are the different data types in C?The basic data types are int, char, and float. Int is used to declare variables that will be storing integer values. Float is used to store real numbers. Char can store individual character values."
            },
            {
              "textToSpeech": "Q.Which function in C can be used to append a string to another string?The strcat function. It takes two parameters, the source string and the string value to be appended to the source string."
            },
            {
              "textToSpeech": "Q.What is the difference between functions getch() and getche()?Both functions will accept a character input value from the user. When using getch(), the key that was pressed will not appear on the screen, and is automatically captured and assigned to a variable. When using getche(), the key that was pressed by the user will appear on the screen, while at the same time being assigned to a variable."
            },
            {
              "textToSpeech": "Q.Dothese two program statements perform the same output? 1) scanf(“%c”, &letter);  2) letter=getchar()Yes, they both do the exact same thing, which is to accept the next key pressed by the user and assign it to variable named letter."
            },
            {
              "textToSpeech": "Q.What are structure types in C?Structure types are primarily used to store records. A record is made up of related fields. This makes it easier to organize a group of related data."
            },
            {
              "textToSpeech": "Q.What does the characters “r” and “w” mean when writing programs that will make use of files?“r” means “read” and will open a file as input wherein data is to be retrieved. “w” means “write”, and will open a file for output."
            },
            {
              "textToSpeech": "Q.What is the difference between text files and binary files?Text files contain data that can easily be understood by humans. It includes letters, numbers and other characters. On the other hand, binary files contain 1s and 0s that only computers can interpret."
            },
            {
              "textToSpeech": "Q.Is it possible to create your own header files?Yes, it is possible to create a customized header file. Just include in it the function prototypes that you want to use in your program, and use the #include directive followed by the name of your header file."
            },
            {
              "textToSpeech": "Q.What is dynamic data structure?Dynamic data structure provides a means for storing data more efficiently into memory. Using dynamic memory allocation, your program will access memory spaces as needed."
            },
            {
              "textToSpeech": "Q.What is the general form of a C program?A C program begins with the preprocessor directives, in which the programmer would specify which header file and what constants (if any) to be used."
            },
            {
              "textToSpeech": "Q.What is the advantage of a random access file?If the amount of data stored in a file is fairly large, the use of random access will allow you to search through it quicker. If it had been a sequential access file, you would have to go through one record at a time until you reach the target data."
            },
            {
              "textToSpeech": "Q.In a switch statement, what will happen if a break statement is omitted?If a break statement was not placed at the end of a particular case portion? It will move on to the next case portion, possibly causing incorrect output."
            },
            {
              "textToSpeech": "Q.Describe how arrays can be passed to a user defined functionOne thing to note is that you cannot pass the entire array to a function. Instead, you pass to it a pointer that will point to the array first element in memory. To do this, you indicate the name of the array without the brackets."
            },
            {
              "textToSpeech": "Q.What are pointers?Pointers point to specific areas in the memory. Pointers contain the address of a variable, which in turn may contain a value or even an address to another memory."
            },
            {
              "textToSpeech": "Q.How do you convert strings to numbers in C?\n You can write you own functions to do string to number conversions, or instead use C’s built in functions.You can use atof to convert to a floating point value, atoi to convert to an integer value, and atol to convert to a long integer value."
            }
          ]
        },
        {
          "type": "suggestion_chips",
          "platform": "google",
          "suggestions": [
            {
              "title": "Developer"
            },
            {
              "title": "More C Questions"
            },
            {
              "title": "Java Questions"
            },
            {
              "title": "C# Questions"
            },
            {
              "title": "Python Questions"
            },
            {
              "title": "php Questions"
            },
            {
              "title": "SQL Questions"
            },
            {
              "title": "Exit"
            }
          ],
          "lang": "en"
        },
        {
          "type": 0,
          "speech": []
        }
      ],
      "defaultResponsePlatforms": {},
      "speech": []
    }
  ],
  "priority": 500000,
  "cortanaCommand": {
    "navigateOrService": "NAVIGATE",
    "target": ""
  },
  "webhookUsed": false,
  "webhookForSlotFilling": false,
  "lastUpdate": 1534359479,
  "fallbackIntent": false,
  "events": [],
  "userSays": [
    {
      "id": "976305ee-6e9a-4e5f-be13-211159b3658f",
      "data": [
        {
          "text": "Questions on C Language"
        }
      ],
      "isTemplate": false,
      "count": 1,
      "updated": 1534359479,
      "isAuto": false
    },
    {
      "id": "9925abfa-4900-4ffc-b1b6-d90f33e906e8",
      "data": [
        {
          "text": "C",
          "alias": "given-name",
          "meta": "@sys.given-name",
          "userDefined": true
        }
      ],
      "isTemplate": false,
      "count": 2,
      "updated": 1534359479,
      "isAuto": false
    },
    {
      "id": "d51cc632-6f75-48c2-a196-c6b8e7cd1a9e",
      "data": [
        {
          "text": "interview questions of C language"
        }
      ],
      "isTemplate": false,
      "count": 0,
      "updated": 1534359479,
      "isAuto": false
    },
    {
      "id": "dafe2444-0181-4056-8a0d-7677c6ebc8ff",
      "data": [
        {
          "text": "tell me something about C language"
        }
      ],
      "isTemplate": false,
      "count": 0,
      "updated": 1534359479,
      "isAuto": false
    },
    {
      "id": "7c4e3141-1bf0-43a1-9ee5-068d70580517",
      "data": [
        {
          "text": "more interview questions"
        }
      ],
      "isTemplate": false,
      "count": 0,
      "updated": 1534359479,
      "isAuto": false
    },
    {
      "id": "3c6ba35e-a33d-400f-8e63-61c75a21321e",
      "data": [
        {
          "text": "tell me C interview questions"
        }
      ],
      "isTemplate": false,
      "count": 0,
      "updated": 1534359479,
      "isAuto": false
    },
    {
      "id": "69e38cdd-21d3-4c6f-915e-7c4e75d7fa5d",
      "data": [
        {
          "text": "interview questions on c",
          "alias": "given-name",
          "meta": "@sys.given-name",
          "userDefined": true
        }
      ],
      "isTemplate": false,
      "count": 0,
      "updated": 1534359479,
      "isAuto": false
    },
    {
      "id": "cf3f14df-de21-45aa-9fd2-e84014594e6b",
      "data": [
        {
          "text": "show me more questions on c language"
        }
      ],
      "isTemplate": false,
      "count": 0,
      "updated": 1534359479,
      "isAuto": false
    },
    {
      "id": "ddf9793a-9289-48ad-ae15-ec81448b3e9e",
      "data": [
        {
          "text": "show more"
        }
      ],
      "isTemplate": false,
      "count": 0,
      "updated": 1534359479,
      "isAuto": false
    },
    {
      "id": "e33e0bf5-81a5-466e-8217-ecdc4699d6af",
      "data": [
        {
          "text": "What do you know about C"
        }
      ],
      "isTemplate": false,
      "count": 0,
      "updated": 1534359479,
      "isAuto": false
    }
  ],
  "followUpIntents": [],
  "liveAgentHandoff": false,
  "endInteraction": false,
  "templates": []
}